# -*- coding: utf-8 -*-
"""XGBoost.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ys9ue8TFb4qOjLEOntnZdIcuCn5Fu_aC
"""

from google.colab import drive
drive.mount('/content/gdrive')

import pandas as pd
import xgboost as xgb
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from xgboost import XGBClassifier

# Load the iris dataset
iris = pd.read_csv('/content/gdrive/MyDrive/IRIS-DataSet/Iris.csv')
iris.drop("Id", axis = 1, inplace = True)

# Pre-process the data by converting the species column into numerical values
iris['Species'] = iris['Species'].map({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})

# Extract the feature matrix and target variable
X = iris.iloc[:,:-1].values
Y = iris.iloc[:,-1].values

# Split the data into training and testing sets
#X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)

# Train the XGBoost classifier
model = XGBClassifier(n_jobs=-1, learning_rate=0.1, max_depth=5, n_estimators=100)
model.fit(X_train, Y_train)

# Predict the target variable for the test set
Y_pred = model.predict(X_test)

# Evaluate the model's performance
print("Accuracy:", accuracy_score(Y_test, Y_pred)*100)
print("Confusion Matrix:\n", confusion_matrix(Y_test, Y_pred))
print("Classification Report:\n", classification_report(Y_test, Y_pred))